// FlowerBot VK Mini App

// –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const appData = {
    events: [],
    bouquets: {
        '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è': [
            {
                id: 'b1',
                name: '–†–∞–¥—É–∂–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
                price: '2500 ‚ÇΩ',
                description: '–Ø—Ä–∫–∏–π –º–∏–∫—Å —Ü–≤–µ—Ç–æ–≤',
                image: 'https://images.unsplash.com/photo-1561181286-d3fee7d55364?w=300&h=300&fit=crop'
            },
            {
                id: 'b2',
                name: '–°–æ–ª–Ω–µ—á–Ω—ã–π –±—É–∫–µ—Ç',
                price: '1800 ‚ÇΩ',
                description: '–ñ–µ–ª—Ç—ã–µ —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º—ã',
                image: 'https://images.unsplash.com/photo-1563241527-3004b7be0ffd?w=300&h=300&fit=crop'
            },
            {
                id: 'b3',
                name: '–í–µ—Å–µ–Ω–Ω—è—è —Ä–∞–¥–æ—Å—Ç—å',
                price: '2200 ‚ÇΩ',
                description: '–¢—é–ª—å–ø–∞–Ω—ã –∏ –Ω–∞—Ä—Ü–∏—Å—Å—ã',
                image: 'https://images.unsplash.com/photo-1574684891174-df8bc2d51162?w=300&h=300&fit=crop'
            }
        ]
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK Bridge
function initVK() {
    if (window.vkBridge) {
        vkBridge.send('VKWebAppInit')
            .then(data => {
                console.log('VK Bridge initialized:', data);
            })
            .catch(error => {
                console.log('VK Bridge error:', error);
            });
    }
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
function showScreen(screenId) {
    // –°–∫—Ä—ã—Ç—å –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
    document.getElementById(screenId).classList.add('active');
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    const date = new Date(dateString);
    const options = { 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric' 
    };
    return date.toLocaleDateString('ru-RU', options);
}

// –ü–æ–¥—Å—á–µ—Ç –¥–Ω–µ–π –¥–æ —Å–æ–±—ã—Ç–∏—è
function getDaysUntil(dateString) {
    const eventDate = new Date(dateString);
    const today = new Date();
    const diffTime = eventDate - today;
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    return diffDays;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
function handleEventForm() {
    const form = document.getElementById('event-form');
    if (!form) return;
    
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(form);
        const eventData = {
            id: Date.now().toString(),
            type: document.getElementById('event-type').value,
            date: document.getElementById('event-date').value,
            recipientName: document.getElementById('recipient-name').value,
            comment: document.getElementById('event-comment').value,
            remindersEnabled: document.getElementById('reminders-enabled').checked
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
        appData.events.push(eventData);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (window.vkBridge) {
            vkBridge.send('VKWebAppTapticNotificationOccurred', {type: 'success'});
        }
        
        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        form.reset();
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        showScreen('home-screen');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π
        renderEvents();
        
        alert('–°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ! –í—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è.');
    });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
function renderEvents() {
    const eventsList = document.getElementById('events-list');
    if (!eventsList) return;
    
    if (appData.events.length === 0) {
        eventsList.innerHTML = `
            <div class="empty-state">
                <span class="empty-icon">üìÖ</span>
                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π</p>
                <p class="empty-subtitle">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</p>
            </div>
        `;
        return;
    }
    
    const eventsHTML = appData.events.map(event => {
        const daysUntil = getDaysUntil(event.date);
        const daysText = daysUntil === 0 ? '–°–µ–≥–æ–¥–Ω—è!' : 
                        daysUntil === 1 ? '–ó–∞–≤—Ç—Ä–∞' : 
                        daysUntil > 1 ? `–ß–µ—Ä–µ–∑ ${daysUntil} –¥–Ω–µ–π` : 
                        '–ü—Ä–æ—à–µ–¥—à–µ–µ —Å–æ–±—ã—Ç–∏–µ';
        
        return `
            <div class="event-card" data-event-id="${event.id}">
                <div class="event-info">
                    <h4>${event.type}</h4>
                    <p><strong>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</strong> ${event.recipientName}</p>
                    <p><strong>–î–∞—Ç–∞:</strong> ${formatDate(event.date)}</p>
                    <p class="days-until ${daysUntil <= 3 ? 'urgent' : ''}">${daysText}</p>
                </div>
                <div class="event-actions">
                    <button class="btn btn--small" onclick="showBouquets('${event.type}', '${event.id}')">
                        –í—ã–±—Ä–∞—Ç—å –±—É–∫–µ—Ç
                    </button>
                </div>
            </div>
        `;
    }).join('');
    
    eventsList.innerHTML = eventsHTML;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç—ã –¥–ª—è —Å–æ–±—ã—Ç–∏—è
function showBouquets(eventType, eventId) {
    const bouquets = appData.bouquets[eventType] || appData.bouquets['–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è'];
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω —Å –∫–∞—Ä—É—Å–µ–ª—å—é –±—É–∫–µ—Ç–æ–≤
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º alert
    alert(`–ü–æ–¥–±–æ—Ä–∫–∞ –±—É–∫–µ—Ç–æ–≤ –¥–ª—è —Å–æ–±—ã—Ç–∏—è "${eventType}" –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ`);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–ø-–±—É–∫–µ—Ç–æ–≤
function renderTopBouquets() {
    const topBouquetsContainer = document.getElementById('top-bouquets');
    if (!topBouquetsContainer) return;
    
    const topBouquets = appData.bouquets['–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è']; // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞
    
    const bouquetsHTML = topBouquets.map(bouquet => `
        <div class="bouquet-card">
            <img src="${bouquet.image}" alt="${bouquet.name}" class="bouquet-image" 
                 onerror="this.src='https://via.placeholder.com/300x300/e0e0e0/666?text=üå∏'">
            <div class="bouquet-info">
                <div class="bouquet-name">${bouquet.name}</div>
                <div class="bouquet-price">${bouquet.price}</div>
            </div>
        </div>
    `).join('');
    
    topBouquetsContainer.innerHTML = bouquetsHTML;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º VK Bridge
    initVK();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ä–º—ã
    handleEventForm();
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏ —Ç–æ–ø-–±—É–∫–µ—Ç—ã
    renderEvents();
    renderTopBouquets();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–∞—Ç—É –¥–ª—è —Å–æ–±—ã—Ç–∏—è (—Å–µ–≥–æ–¥–Ω—è)
    const dateInput = document.getElementById('event-date');
    if (dateInput) {
        const today = new Date().toISOString().split('T')[0];
        dateInput.min = today;
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.showScreen = showScreen;
window.showBouquets = showBouquets;
